name: CI Pipeline

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  ci:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: ['20.19.2', '22.16.0']

    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        # 确保在 Windows 环境下使用 LF 行结束符
        set-safe-directory: true

    - name: 启用 Corepack
      run: corepack enable

    - name: 配置 Git 行结束符 (仅 Windows)
      if: runner.os == 'Windows'
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf

    - name: 安装 pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.13.1

    - name: 设置 Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'

    - name: 安装依赖
      uses: nick-invision/retry@v3
      with:
        timeout_minutes: 5
        max_attempts: 2
        retry_on: error
        command: pnpm install --frozen-lockfile

    # 根目录代码质量检查
    - name: 类型检查
      run: pnpm run type:check:all

    - name: Biome 代码检查
      run: pnpm run check

    - name: 拼写检查
      run: pnpm run spell:check

    - name: 构建项目
      uses: nick-invision/retry@v3
      with:
        timeout_minutes: 5
        max_attempts: 2
        retry_on: error
        command: |
          pnpm run build
          pnpm --filter bestmcp run build

    - name: 运行测试并生成覆盖率报告
      uses: nick-invision/retry@v3
      with:
        timeout_minutes: 10
        max_attempts: 2
        retry_on: error
        command: pnpm run test:coverage

    - name: 上传根目录覆盖率报告 
      uses: codecov/codecov-action@v4
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.19.2'
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
        flags: cli-tests
        name: codecov-cli
        fail_ci_if_error: true
        verbose: true

    - name: 上传构建产物
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: build-artifacts-cli-${{ matrix.os }}-node${{ matrix.node-version }}
        path: dist/
        retention-days: 7
